name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    steps:
      # Check out the repository with a shallow clone
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache npm modules
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Cache Next.js build cache to speed up rebuilds
      - name: Cache Next.js Build Cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-cache-${{ hashFiles('**/package-lock.json') }}

      # Build the Next.js app
      - name: Build Next.js App
        run: npm run build

      # Archive the .next folder as the build artifact
      - name: Archive Build Output
        run: tar -czf build-artifact.tar.gz .next

      # Upload the build artifact for the deploy job to use
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build-artifact.tar.gz

  deploy:
    name: Deploy to Azure Static Web Apps
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Check out the repository (required for the deploy action)
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Download the build artifact from the build job
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      # Extract the build artifact so that the .next folder is available
      - name: Extract Build Artifact
        run: tar -xzf build-artifact.tar.gz

      # Deploy the pre-built app using the Azure Static Web Apps deploy action
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          app_location: '/'          # Update if your app source is in a subfolder
          output_location: '.next'    # The folder with your built Next.js app
          skip_app_build: true        # Skip the internal Oryx build since we already built the app
